# -*- coding: utf-8 -*-
"""rfn-korea-test.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1L1YOdo5L6_G2RftFZSpPeM_WfXQofmcT
"""

# Commented out IPython magic to ensure Python compatibility.
# %load_ext autoreload
# %autoreload 2

# train_cities = ["busan", "daejeon", "goyang", "gwangju", "incheon", "changwon", "seongnam", "cheongju"]
test_cities = ["daegu", "suwon", "ulsan", "yongin"]

from custom.rfn_trainer import RFNTrainer
from custom.gcn_trainer import GCNTrainer
from custom.mlp_trainer import MLPTrainer
from custom.utils import *

# RFN models
rfn_trainer_ia = RFNTrainer(fusion='interactional', aggregator='attentional')
rfn_trainer_in = RFNTrainer(fusion='interactional', aggregator='non-attentional')
rfn_trainer_aa = RFNTrainer(fusion='additive', aggregator='attentional')
rfn_trainer_an = RFNTrainer(fusion='additive', aggregator='non-attentional')

# Baseline models
gcn_trainer_gat = GCNTrainer("gat")
gcn_trainer_gcn = GCNTrainer("gcn")
gcn_trainer_gsg = GCNTrainer("graphsage")
mlp_trainer = MLPTrainer()


rfn_models = [rfn_trainer_ia, rfn_trainer_in, rfn_trainer_aa, rfn_trainer_an]
baseline_models = [gcn_trainer_gat, gcn_trainer_gcn, gcn_trainer_gsg, mlp_trainer]
target_models = rfn_models + baseline_models

for city_name in test_cities:
    G = load_city_graph(city_name)
    rfn_city, dgl_city = generate_required_city_graph(city_name, G)
    for t in target_models:
        if isinstance(t, RFNTrainer):
            t.add_city(rfn_city, train=False)
        else:
            t.add_city(dgl_city, train=False)

load_data_folder = 'model_data/20200619_182329'
for t in target_models:
    t.build()
    t.load_params("%s/%s" % (load_data_folder, t.name))

test_results = {}
for t in target_models:
    test_results[t.name] = t.test(verbose = False)

a = pd.DataFrame.from_dict(test_results)
print(a.transpose())